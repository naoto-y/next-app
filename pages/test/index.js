import Head from 'next/head'
import styles from '../../styles/Home.module.css'

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>覚書</title>
      </Head>

      <h1 className={styles.title}>next.js覚書</h1>
      <div>
        <h2>基本事項</h2>
        <p>Reactベースだが、jsxは使用しない</p>
        <p>Reactがjs拡張ライブラリなのに対してnextはwebアプリフレームワークの位置づけっぽい</p>
      </div>
      <div>
        <h2>テンプレート</h2>
        <p>ページのテンプレートはすべてHomeメソッドの戻り値として設定される</p>
      </div>
      <div>
        <h2>スクリプト</h2>
        <p>ベースはReactなので、その書き方に準じる模様</p>
      </div>
      <div>
        <h2>スタイル</h2>
        <p>”styles.クラス名"でスタイルを充てる。逆にいえば、styleシートに定義していないスタイルは絶対にあたらない？</p>
        <p>使用するcssはファイルの先頭でimportする</p>
        <p>要素の親にクラスを指定すれば、定義されている子要素のスタイルは自動で反映される</p>
      </div>
      <div>
        <h2>ルーティング</h2>
        <p>pagesディレクトリ配下の階層がそのままルーティングになる。例:pages/test/aaa.js → /test/aaa</p>
      </div>
      <div>
        <h2>コンポーネント</h2>
        <p>ファイルの先頭でimportしてから使用する</p>
        <p>コンポーネント名の頭文字は大文字という決まりのようだ。</p>
        <p>テンプレートの宣言がメソッドということは、その引数がテンプレートバインディングできる？</p>
        <p>コンポーネントのテンプレートは必ず<></>で囲む必要があるらしい</p>
        <p>propsはコンポーネント宣言タグの属性で渡す</p>
      </div>
      <div>
        <h2>ライフサイクル</h2>
        <p>_app.jsからpageに向かって進むらしい</p>
      </div>
      <div>
        <h2>AJAX</h2>
        <p>他のjsフレームワークと同様にjQueryなりAxiosなりwindow.fetchなりを使うらしい</p>
      </div>
      <div>
        <h2>api</h2>
        <p>おそらくnodeでapiサーバーを立てるイメージ</p>
        <p>そういう意味では、完全にアプリケーションサーバーのイメージが強い</p>
        <p>基本的にはapiディレクトリの配下に置けば自動でルーティングしてくれるらしい</p>
      </div>
      <div>
        <h2>メモ</h2>
        <p>基本的にサーバーサイトレンダリングを想定しているので、バックエンドのフレームワークの使い方に近い。</p>
        <p>静的なページを作るだけならそこまで難しくないと思う。</p>
        <p>対して、ユーザーからのアクションをがあることを考えるとバックエンドよりの思考でフロントエンドのソースを書くイメージか？</p>
        <p>PHPから影響を受けたと書いてる当たり、その見当はあながち外れでもなさそうだ</p>
        <p>ReactそのものがVueと違って、単方向バインディングなので基本的にユーザーのアクションは全てformのような形で管理する？</p>
      </div>
    </div>
  )
}